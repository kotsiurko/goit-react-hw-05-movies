{"version":3,"file":"static/js/186.df129d3e.chunk.js","mappings":"kMAIMA,EAAU,IAAIC,EAAAA,EA6BpB,UA3BgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRP,EAAQQ,aAAaN,GAAIO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC/BJ,EAAUI,EAAKC,QAChB,GACF,GAAE,CAACT,KAGF,wBACGG,EAAOO,KAAI,SAAAC,GACV,OACE,2BACE,wBACE,oCAAYA,EAAGC,aAEjB,uBAAID,EAAGE,YAJAF,EAAGX,GAOf,KAGN,C,wJC7BYD,EAAb,wFACc,iCADd,gDAEa,oCAFb,gDAIE,WACE,OAAOe,EAAAA,EAAAA,IAAA,kBACFC,KADE,sDAC4CA,KAD5C,OAGR,GARH,yBAUE,SAAYC,GACV,OAAOF,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,+CAAoDA,KAApD,wBAA2EC,GACnF,GAZH,4BAcE,SAAehB,GAAK,IAAD,OACjB,OAAOc,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqCf,EAArC,4BAAmDe,KAAnD,QACJR,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACCS,EAAuET,EAAvES,cAAeC,EAAwDV,EAAxDU,MAAOC,EAAiDX,EAAjDW,aAAcC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OACpE,MAAO,CACLL,cAAAA,EACAC,MAAAA,EACAC,aAAcA,EAAaI,UAAU,EAAG,GACxCH,aAAAA,EACAC,SAAAA,EACAC,OAAQ,EAAKE,UAAUF,GAE1B,GACJ,GA3BH,uBA6BE,SAAUtB,GACR,OAAOc,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqCf,EAArC,oCAA2De,KAA3D,OACR,GA/BH,0BAiCE,SAAaf,GACX,OAAOc,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqCf,EAArC,oCAA2De,KAA3D,OACR,GAnCH,uBAqCE,SAAUU,GACR,OAAOA,EAAG,yCAAqCA,GAAQ,yFACxD,GAvCH,uBAyCE,SAAUC,GACR,OAAQA,EAASC,QAAO,SAACC,EAAaC,GAAd,OAA+BD,EAAc,KAAOC,EAAaC,IAAjE,GAAuE,IAAKC,OAAO,EAC5G,KA3CH,I","sources":["components/Reviews/Reviews.jsx","services.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { MovieDB } from '../../services';\nimport { useEffect, useState } from 'react';\n\nconst movieDB = new MovieDB();\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    movieDB.fetchReviews(id).then(({ data }) => {\n      setReview(data.results);\n    });\n  }, [id]);\n\n  return (\n    <ul>\n      {review.map(el => {\n        return (\n          <li key={el.id}>\n            <p>\n              <b>Author: {el.author}</b>\n            </p>\n            <p>{el.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport class MovieDB {\n  #BASE_URL = 'https://api.themoviedb.org/3';\n  #API_KEY = 'b04a034fc18f8d6bb9fee9f009f99d0d';\n\n  fetchTrendMovies() {\n    return axios.get(\n      `${this.#BASE_URL}/trending/movie/week?api_key=${this.#API_KEY}`\n    );\n  }\n\n  fetchSearch(query) {\n    return axios.get(`${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&query=${query}`);\n  }\n\n  fetchMovieById(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}?api_key=${this.#API_KEY}`)\n      .then(({ data }) => {\n        const { backdrop_path, title, release_date, vote_average, overview, genres } = data;\n        return {\n          backdrop_path,\n          title,\n          release_date: release_date.substring(0, 4),\n          vote_average,\n          overview,\n          genres: this.getGenres(genres),\n        };\n      });\n  }\n\n  fetchCast(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}/credits?api_key=${this.#API_KEY}`);\n  }\n\n  fetchReviews(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}/reviews?api_key=${this.#API_KEY}`);\n  }\n\n  getImgSrc(url) {\n    return url ? `https://image.tmdb.org/t/p/w500${url}` : 'https://raw.githubusercontent.com/kotsiurko/filmoteka/dev/src/images/default-photo.jpeg'\n  }\n\n  getGenres(genreArr) {\n    return (genreArr.reduce((accumulator, currentValue) => accumulator + ', ' + currentValue.name, '')).substr(2)\n  }\n}"],"names":["movieDB","MovieDB","id","useParams","useState","review","setReview","useEffect","fetchReviews","then","data","results","map","el","author","content","axios","this","query","backdrop_path","title","release_date","vote_average","overview","genres","substring","getGenres","url","genreArr","reduce","accumulator","currentValue","name","substr"],"sourceRoot":""}