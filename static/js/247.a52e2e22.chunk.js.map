{"version":3,"file":"static/js/247.a52e2e22.chunk.js","mappings":"mMAIMA,EAAU,IAAIC,EAAAA,EA+BpB,UA7Ba,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRP,EAAQQ,UAAUN,GAAIO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BJ,EAAQI,EAAKL,KACd,GACF,GAAE,CAACH,KAGF,wBACGG,EAAKM,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IAAKb,EAAQc,UAAUF,EAAGG,cAC1BC,IAAKJ,EAAGK,KACRC,MAAM,WAER,uBAAIN,EAAGK,SANAL,EAAGV,GASf,KAGN,C,wJC/BYD,EAAb,wFACc,iCADd,gDAEa,oCAFb,gDAIE,WACE,OAAOkB,EAAAA,EAAAA,IAAA,kBACFC,KADE,sDAC4CA,KAD5C,OAGR,GARH,yBAUE,SAAYC,GACV,OAAOF,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,+CAAoDA,KAApD,wBAA2EC,GACnF,GAZH,4BAcE,SAAenB,GAAK,IAAD,OACjB,OAAOiB,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqClB,EAArC,4BAAmDkB,KAAnD,QACJX,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACCY,EAAuEZ,EAAvEY,cAAeC,EAAwDb,EAAxDa,MAAOC,EAAiDd,EAAjDc,aAAcC,EAAmCf,EAAnCe,aAAcC,EAAqBhB,EAArBgB,SAAUC,EAAWjB,EAAXiB,OACpE,MAAO,CACLL,cAAAA,EACAC,MAAAA,EACAC,aAAcA,EAAaI,UAAU,EAAG,GACxCH,aAAAA,EACAC,SAAAA,EACAC,OAAQ,EAAKE,UAAUF,GAE1B,GACJ,GA3BH,uBA6BE,SAAUzB,GACR,OAAOiB,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqClB,EAArC,oCAA2DkB,KAA3D,OACR,GA/BH,0BAiCE,SAAalB,GACX,OAAOiB,EAAAA,EAAAA,IAAA,kBAAaC,KAAb,wBAAqClB,EAArC,oCAA2DkB,KAA3D,OACR,GAnCH,uBAqCE,SAAUU,GACR,OAAOA,EAAG,yCAAqCA,GAAQ,yFACxD,GAvCH,uBAyCE,SAAUC,GACR,OAAQA,EAASC,QAAO,SAACC,EAAaC,GAAd,OAA+BD,EAAc,KAAOC,EAAajB,IAAjE,GAAuE,IAAKkB,OAAO,EAC5G,KA3CH,I","sources":["components/Cast/Cast.jsx","services.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { MovieDB } from '../../services';\nimport { useEffect, useState } from 'react';\n\nconst movieDB = new MovieDB();\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    movieDB.fetchCast(id).then(({ data }) => {\n      setCast(data.cast);\n    });\n  }, [id]);\n\n  return (\n    <ul>\n      {cast.map(el => {\n        return (\n          <li key={el.id}>\n            <img\n              src={movieDB.getImgSrc(el.profile_path)}\n              alt={el.name}\n              width=\"200px\"\n            />\n            <p>{el.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport class MovieDB {\n  #BASE_URL = 'https://api.themoviedb.org/3';\n  #API_KEY = 'b04a034fc18f8d6bb9fee9f009f99d0d';\n\n  fetchTrendMovies() {\n    return axios.get(\n      `${this.#BASE_URL}/trending/movie/week?api_key=${this.#API_KEY}`\n    );\n  }\n\n  fetchSearch(query) {\n    return axios.get(`${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&query=${query}`);\n  }\n\n  fetchMovieById(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}?api_key=${this.#API_KEY}`)\n      .then(({ data }) => {\n        const { backdrop_path, title, release_date, vote_average, overview, genres } = data;\n        return {\n          backdrop_path,\n          title,\n          release_date: release_date.substring(0, 4),\n          vote_average,\n          overview,\n          genres: this.getGenres(genres),\n        };\n      });\n  }\n\n  fetchCast(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}/credits?api_key=${this.#API_KEY}`);\n  }\n\n  fetchReviews(id) {\n    return axios.get(`${this.#BASE_URL}/movie/${id}/reviews?api_key=${this.#API_KEY}`);\n  }\n\n  getImgSrc(url) {\n    return url ? `https://image.tmdb.org/t/p/w500${url}` : 'https://raw.githubusercontent.com/kotsiurko/filmoteka/dev/src/images/default-photo.jpeg'\n  }\n\n  getGenres(genreArr) {\n    return (genreArr.reduce((accumulator, currentValue) => accumulator + ', ' + currentValue.name, '')).substr(2)\n  }\n}"],"names":["movieDB","MovieDB","id","useParams","useState","cast","setCast","useEffect","fetchCast","then","data","map","el","src","getImgSrc","profile_path","alt","name","width","axios","this","query","backdrop_path","title","release_date","vote_average","overview","genres","substring","getGenres","url","genreArr","reduce","accumulator","currentValue","substr"],"sourceRoot":""}